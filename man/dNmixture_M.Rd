% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dNmixture_MNB.R, R/dNmixture_MP.R
\name{dNmixture_M}
\alias{dNmixture_M}
\alias{dNmixture_MNB_s}
\alias{dNmixture_MNB_v}
\alias{rNmixture_MNB_s}
\alias{rNmixture_MNB_v}
\alias{dNmixture_MP_s}
\alias{dNmixture_MP_v}
\alias{rNmixture_MP_s}
\alias{rNmixture_MP_v}
\title{Multinomial N-mixture distribution for use in \code{nimble} models}
\usage{
dNmixture_MNB_s(x, mu, p, r, J, log = 0)

rNmixture_MNB_s(n, mu, p, r, J)

dNmixture_MNB_v(x, mu, p, r, J, log = 0)

rNmixture_MNB_v(n, mu, p, r, J)

dNmixture_MP_s(x, mu, p, J, log = 0)

rNmixture_MP_s(n, mu, p, J)

dNmixture_MP_v(x, mu, p, J, log = 0)

rNmixture_MP_v(n, mu, p, J)
}
\arguments{
\item{x}{vector of integer counts from a series of sampling occasions.}

\item{mu}{expected value of the (negative binomial or Poisson) distribution of true abundance.}

\item{p}{detection probability (scalar for \code{dNmixture_M\*_s}, vector for \code{dNmixture_M\*_v}).}

\item{r}{shape parameter defining overdispersion. As \code{r} approaches 0, the negative binomial converges to a Poisson.}

\item{J}{integer number of searches.}

\item{log}{\code{TRUE} or \code{1} to return log probability. \code{FALSE} or \code{0} to return probability.}

\item{n}{number of random draws, each returning a vector of length \code{len}. Currently only \code{n = 1} is supported, but the argument exists for standardization of "\code{r}" functions.}
}
\value{
For \code{dNmixture_s} and \code{dNmixture_v}: the probability (or likelihood) or log probability of observation vector \code{x}. \cr
        For \code{rNmixture_s} and \code{rNmixture_v}: a simulated detection history, \code{x}.
}
\description{
\code{dNmixture_MNB_s} and \code{dNmixture_MNB_v} provide Multinomial Negative Binomial (MNB) mixture distributions of abundance ("N-mixture") for use in \code{nimble} models.
}
\details{
These nimbleFunctions provide distributions that can be used directly in R or in \code{nimble} hierarchical models (via \code{\link[nimble]{nimbleCode}} and \code{\link[nimble]{nimbleModel}}). \cr
         The distributions are implemented in closed-form following Haines (2020), which avoids infinite sum-based calculations.
}
\examples{

# Set up variables and parameters
#  J:  number of visits
#  mu: mean abundance
#  r:  scale parameter on abundance distribution
#  p:  search-specific detection probabilities

 J <- 10
 mu <- 5
 r  <- 2
 p  <- runif(J, 0.4, 0.7)

 mut <- log(mu)
 rt  <- log(r)

# Generate data

  yv <- rNmixture_MNB_v(n = 1, mu = mu, p = p, r = r, J = J)

# Write the model code

  nc <- nimbleCode({

    mut ~  dnorm(0, 1/2)
    mu  <- exp(mut)

    rt ~  dnorm(0, 0.1)
    r  <- exp(rt)

    for (j in 1:J) {
      p[j] ~ dunif(0, 1)
    }

    x[1:J] ~ dNmixture_MNB_v(mu = mu, p = p[1:J], r = r, J = J)

  })

# Construct the model object

  nmix <- nimbleModel(nc,
                      constants = list(J = J),
                      data = list(x = yv),
                      inits = list(mut = mut,
                                   rt  = rt,
                                   p   = p))

# Calculate log probability of data from the model

  nmix$calculate()


}
\references{
L. M. Haines. 2020. Multinomial N-mixture models for removal sampling. Biometrics 76:540-548. DOI 10.1111/biom.13147
}
\seealso{
For binomial N-mixture models, see \code{\link{dNmixture}}. \cr
         For occupancy models dealing with detection/nondetection data, see \code{\link{dOcc}}. \cr
         For dynamic occupancy, see \code{\link{dDynOcc}}.
}
\author{
Juniper Simonis
}
